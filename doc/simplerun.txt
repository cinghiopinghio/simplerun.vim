*simplerun.txt*  Run commands in a terminal

Author:  CinghioPinghio
License: Same terms as Vim itself (see |license|)

Send commands to a terminal in a vertical split window (for now).

=========================================================================
CONFIGURATION:

                                                    *g:simplerun_commands*

    define default runner for each filetype

>
    :let g:simplerun_commands = {
                \ 'python': 'python',
                \ 'sh': 'bash',
                \ 'javascript': 'node',
                \ 'make': 'make --always-make --silent',
                \ 'lua': 'lua'
                \ }
<
                                                    *g:simplerun_winfunc*

    Set to a function to open a new window.
    It accept as argument the command to be run.
    By default a `vsplit` windows is spawned.

==========================================================================
FUNTIONS:

*simplerun#toggle(command)*
    Open or close the terminal and run the optional `command` on it.
    The terminal will be cleared at each run.

*simplerun#toggle_on_save(command)*
    Enable a `BufWritePost` autocommand to run `simplerun#toggle(command)` on
    each write of the current buffer.

===========================================================================
EXAMPLES:

Custom command:

>
    command! Top call simplerun#toggle("top")
<
Open a new floating window with `Floaterm`

>
    function! Simplerun_winfunc(command)
        execute 'FloatermNew ' . a:command
    endfunction

    let g:simplerun_winfunc='Simplerun_winfunc'
<

 vim:tw=78:et:ft=help:norl:
